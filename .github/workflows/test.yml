name: test

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      GOPROXY: direct
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - run: go mod download -x
      - name: install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1
      - name: golangci-lint run ...
        run: golangci-lint run --config=./.github/golangci.yaml

  test:
    needs: lint
    strategy:
      matrix:
        go: [1.16.x, 1.17.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@v2
      - run: go mod download
      - run: go test -race -covermode atomic -coverprofile=covprofile ./...
      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get github.com/mattn/goveralls
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_BRANCH: ${{ github.head_ref }}
        run: goveralls -parallel -coverprofile=covprofile -service=github -flagname="${{ runner.os }}-Go-${{ matrix.go }}"
  
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get github.com/mattn/goveralls
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_BRANCH: ${{ github.head_ref }}
        run: goveralls -parallel-finish -service=github